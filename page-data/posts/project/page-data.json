{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/project","result":{"pageContext":{"currentCategory":"project","categories":["All","project","research","블로그","featured"],"edges":[{"node":{"id":"a4dbd9d7-8eee-52e8-8b05-778168eb2baa","excerpt":"🍄 프로젝트 구현 결과 jChecker 2.0 시스템의 기능은 웹 서비스 형태로 제공된다. React i18next (react-i18next) 라이브러리를 통해 영어 버전의 jChecker 2.0 서비스도 지원 가능하다. 사용자가 jChecker 2.0 웹 페이지에 접속하면, 가장 먼저 볼 수 있는 화면이다. 우측 상단에 있는 아이콘 버튼을 통해 언어를 변경할 수 있다. 언어 변경 시 페이지 이동 없이 즉시 번역 가능하며, 선택한 언어의 버전으로 지속적인 서비스가 제공된다. 알아보기 (ABOUT) 버튼을 통해 jChecker 2.0 서비스의 지원 기능과 동작 방법에 대한 설명 페이지를 조회할 수 있다. ✏️ For Students  사용자 (학생)은 메인 페이지의 시작하기 (GET STARTED) 버튼을 통해 채점 서비스 시작 페이지를 조회할 수 있다. 인증 토큰을 입력해 (Enter the authentication token) 텍스트를 클릭하여 클래스 입장 페이지로 이동한다. …","fields":{"slug":"/gatsby-capstone-jchecker2.0-result/"},"frontmatter":{"categories":"project","title":"jChecker 2.0 프로젝트 결과","date":"June 24, 2023"}},"next":{"fields":{"slug":"/gatsby-capstone-jchecker2.0/"}},"previous":null},{"node":{"id":"c06ac0b3-ea4c-5a2b-b90e-b34a56128781","excerpt":"💭 고민의 시작 학생들이 프로그래밍 교육 과정에서 부담을 느끼는 부분 중 하나는 디버깅이다. 프로그래밍 경험이 부족한 학생들은 결함 코드의 위치를 찾는 것, 해당 결함을 수정하는 것 모두 어려워 한다. Python, Java 등 다양한 언어의 프로그래밍 실습 수업에 TA로 참여하면서 가장 많이 받았던 질문은 두 가지였다. ~이 안되는데, 왜 안되는지 모르겠다 n번 라인에 문제가 있는 것 같은데, 어떻게 수정해야 하는지 모르겠다 학생들의 프로그래밍 능력 향상을 위해서 디버깅에 필요한 정보를 제공해야 되지 않을까 🤔 이때, 디버깅 정보는 다음과 같다. 결함 코드를 찾기 위한 Problem space, 특정 코드의 실제 결함 여부, 결함 코드 수정 방법 TA로서 많은 프로그램을 빠르게 분석하여 효과적인 피드백을 제공할 수 있는 방법이 없을까 🤔 (+ 효과적인 피드백이란?) 🗺 해결 방안의 방향 디버깅에 필요한 정보를 포함하여 맞춤형 피드백을 제공함으로써, 학생들이 프로그래밍 과정에서 겪…","fields":{"slug":"/gatsby-capstone-jchecker2.0/"},"frontmatter":{"categories":"project","title":"Java 프로그래밍 교육을 위한 지능형 튜터링 시스템","date":"June 22, 2023"}},"next":{"fields":{"slug":"/gatsby-research-jchecker1.0/"}},"previous":{"fields":{"slug":"/gatsby-capstone-jchecker2.0-result/"}}},{"node":{"id":"900d46eb-d677-593c-818b-0c7a11accccc","excerpt":"Automatic Evaluation System for Object-Oriented Programs Problem Definition 코딩 테스트 및 과제를 자동으로 채점하는 기존의 프로그램들은 대부분 테스트 케이스만을 기반으로 작동 → Repl.it, WebCat 등: 특정 Input 값에 대해 Output 값이 정답과 일치하는지 확인하여 평가 → 프로그래밍 언어가 가지는 고유의 특성을 반영하지 못한다는 한계가 있음 (ex. 객체 지향 개념) Approach 객체 지향 개념 검사를 지원하는 자동 채점 엔진 기반의 웹 서비스 jChecker → 채점자가 작성한 채점 정책을 바탕으로 프로그램 자동 평가 → 채점 정책 중 테스트 케이스를 사용하여 테스트 케이스 기반의 채점 진행 → Abstract Syntax Tree (AST) 구문 분석 후 AST node 정보를 통해 객체 지향 개념의 구현 여부 확인 → 테스트 케이스 실행 결과, 객체 지향 개념 평가 결과를 자연어 설명으로 제공…","fields":{"slug":"/gatsby-research-jchecker1.0/"},"frontmatter":{"categories":"research project","title":"객체 지향 프로그램 자동 평가 시스템","date":"August 22, 2022"}},"next":{"fields":{"slug":"/gatsby-github-blog/"}},"previous":{"fields":{"slug":"/gatsby-capstone-jchecker2.0/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}